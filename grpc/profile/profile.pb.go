// Code generated by protoc-gen-go.
// source: profile.proto
// DO NOT EDIT!

/*
Package profile is a generated protocol buffer package.

It is generated from these files:
	profile.proto

It has these top-level messages:
	UserInfo
	GetUserInfoRequest
	GetUserInfoReply
	GetFansRequest
	GetFansReply
	AddFollowRequest
	AddFollowReply
	DeleteFollowRequest
	DeleteFollowReply
	GetFollowRequest
	GetFollowReply
*/
package profile

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserInfo struct {
	Name      string `protobuf:"bytes,1,opt,name=Name,json=name" json:"Name,omitempty"`
	Pic       []byte `protobuf:"bytes,2,opt,name=Pic,json=pic,proto3" json:"Pic,omitempty"`
	FansNum   int32  `protobuf:"varint,3,opt,name=FansNum,json=fansNum" json:"FansNum,omitempty"`
	FollowNum int32  `protobuf:"varint,4,opt,name=FollowNum,json=followNum" json:"FollowNum,omitempty"`
	MeipaiNum int32  `protobuf:"varint,5,opt,name=MeipaiNum,json=meipaiNum" json:"MeipaiNum,omitempty"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetUserInfoRequest struct {
	Uid string `protobuf:"bytes,1,opt,name=Uid,json=uid" json:"Uid,omitempty"`
}

func (m *GetUserInfoRequest) Reset()                    { *m = GetUserInfoRequest{} }
func (m *GetUserInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserInfoRequest) ProtoMessage()               {}
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetUserInfoReply struct {
	Status int32     `protobuf:"varint,1,opt,name=Status,json=status" json:"Status,omitempty"`
	Info   *UserInfo `protobuf:"bytes,2,opt,name=Info,json=info" json:"Info,omitempty"`
}

func (m *GetUserInfoReply) Reset()                    { *m = GetUserInfoReply{} }
func (m *GetUserInfoReply) String() string            { return proto.CompactTextString(m) }
func (*GetUserInfoReply) ProtoMessage()               {}
func (*GetUserInfoReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetUserInfoReply) GetInfo() *UserInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type GetFansRequest struct {
	Uid   string `protobuf:"bytes,1,opt,name=Uid,json=uid" json:"Uid,omitempty"`
	Index int64  `protobuf:"varint,2,opt,name=Index,json=index" json:"Index,omitempty"`
}

func (m *GetFansRequest) Reset()                    { *m = GetFansRequest{} }
func (m *GetFansRequest) String() string            { return proto.CompactTextString(m) }
func (*GetFansRequest) ProtoMessage()               {}
func (*GetFansRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type GetFansReply struct {
	Status int32       `protobuf:"varint,1,opt,name=Status,json=status" json:"Status,omitempty"`
	Index  int64       `protobuf:"varint,2,opt,name=Index,json=index" json:"Index,omitempty"`
	Fanss  []*UserInfo `protobuf:"bytes,3,rep,name=Fanss,json=fanss" json:"Fanss,omitempty"`
}

func (m *GetFansReply) Reset()                    { *m = GetFansReply{} }
func (m *GetFansReply) String() string            { return proto.CompactTextString(m) }
func (*GetFansReply) ProtoMessage()               {}
func (*GetFansReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetFansReply) GetFanss() []*UserInfo {
	if m != nil {
		return m.Fanss
	}
	return nil
}

type AddFollowRequest struct {
	Uid     string `protobuf:"bytes,1,opt,name=Uid,json=uid" json:"Uid,omitempty"`
	DestUid string `protobuf:"bytes,2,opt,name=DestUid,json=destUid" json:"DestUid,omitempty"`
}

func (m *AddFollowRequest) Reset()                    { *m = AddFollowRequest{} }
func (m *AddFollowRequest) String() string            { return proto.CompactTextString(m) }
func (*AddFollowRequest) ProtoMessage()               {}
func (*AddFollowRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type AddFollowReply struct {
	Status int32 `protobuf:"varint,1,opt,name=Status,json=status" json:"Status,omitempty"`
}

func (m *AddFollowReply) Reset()                    { *m = AddFollowReply{} }
func (m *AddFollowReply) String() string            { return proto.CompactTextString(m) }
func (*AddFollowReply) ProtoMessage()               {}
func (*AddFollowReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type DeleteFollowRequest struct {
	Uid     string `protobuf:"bytes,1,opt,name=Uid,json=uid" json:"Uid,omitempty"`
	DestUid string `protobuf:"bytes,2,opt,name=DestUid,json=destUid" json:"DestUid,omitempty"`
}

func (m *DeleteFollowRequest) Reset()                    { *m = DeleteFollowRequest{} }
func (m *DeleteFollowRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteFollowRequest) ProtoMessage()               {}
func (*DeleteFollowRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type DeleteFollowReply struct {
	Status int32 `protobuf:"varint,1,opt,name=Status,json=status" json:"Status,omitempty"`
}

func (m *DeleteFollowReply) Reset()                    { *m = DeleteFollowReply{} }
func (m *DeleteFollowReply) String() string            { return proto.CompactTextString(m) }
func (*DeleteFollowReply) ProtoMessage()               {}
func (*DeleteFollowReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type GetFollowRequest struct {
	Uid   string `protobuf:"bytes,1,opt,name=Uid,json=uid" json:"Uid,omitempty"`
	Index int64  `protobuf:"varint,2,opt,name=Index,json=index" json:"Index,omitempty"`
}

func (m *GetFollowRequest) Reset()                    { *m = GetFollowRequest{} }
func (m *GetFollowRequest) String() string            { return proto.CompactTextString(m) }
func (*GetFollowRequest) ProtoMessage()               {}
func (*GetFollowRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type GetFollowReply struct {
	Status  int32       `protobuf:"varint,1,opt,name=Status,json=status" json:"Status,omitempty"`
	Index   int64       `protobuf:"varint,2,opt,name=Index,json=index" json:"Index,omitempty"`
	Follows []*UserInfo `protobuf:"bytes,3,rep,name=Follows,json=follows" json:"Follows,omitempty"`
}

func (m *GetFollowReply) Reset()                    { *m = GetFollowReply{} }
func (m *GetFollowReply) String() string            { return proto.CompactTextString(m) }
func (*GetFollowReply) ProtoMessage()               {}
func (*GetFollowReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetFollowReply) GetFollows() []*UserInfo {
	if m != nil {
		return m.Follows
	}
	return nil
}

func init() {
	proto.RegisterType((*UserInfo)(nil), "profile.UserInfo")
	proto.RegisterType((*GetUserInfoRequest)(nil), "profile.GetUserInfoRequest")
	proto.RegisterType((*GetUserInfoReply)(nil), "profile.GetUserInfoReply")
	proto.RegisterType((*GetFansRequest)(nil), "profile.GetFansRequest")
	proto.RegisterType((*GetFansReply)(nil), "profile.GetFansReply")
	proto.RegisterType((*AddFollowRequest)(nil), "profile.AddFollowRequest")
	proto.RegisterType((*AddFollowReply)(nil), "profile.AddFollowReply")
	proto.RegisterType((*DeleteFollowRequest)(nil), "profile.DeleteFollowRequest")
	proto.RegisterType((*DeleteFollowReply)(nil), "profile.DeleteFollowReply")
	proto.RegisterType((*GetFollowRequest)(nil), "profile.GetFollowRequest")
	proto.RegisterType((*GetFollowReply)(nil), "profile.GetFollowReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Profile service

type ProfileClient interface {
	GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoReply, error)
	GetFans(ctx context.Context, in *GetFansRequest, opts ...grpc.CallOption) (*GetFansReply, error)
	GetFollow(ctx context.Context, in *GetFollowRequest, opts ...grpc.CallOption) (*GetFollowReply, error)
	AddFollow(ctx context.Context, in *AddFollowRequest, opts ...grpc.CallOption) (*AddFollowReply, error)
	DeleteFollow(ctx context.Context, in *DeleteFollowRequest, opts ...grpc.CallOption) (*DeleteFollowReply, error)
}

type profileClient struct {
	cc *grpc.ClientConn
}

func NewProfileClient(cc *grpc.ClientConn) ProfileClient {
	return &profileClient{cc}
}

func (c *profileClient) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoReply, error) {
	out := new(GetUserInfoReply)
	err := grpc.Invoke(ctx, "/profile.Profile/GetUserInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) GetFans(ctx context.Context, in *GetFansRequest, opts ...grpc.CallOption) (*GetFansReply, error) {
	out := new(GetFansReply)
	err := grpc.Invoke(ctx, "/profile.Profile/GetFans", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) GetFollow(ctx context.Context, in *GetFollowRequest, opts ...grpc.CallOption) (*GetFollowReply, error) {
	out := new(GetFollowReply)
	err := grpc.Invoke(ctx, "/profile.Profile/GetFollow", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) AddFollow(ctx context.Context, in *AddFollowRequest, opts ...grpc.CallOption) (*AddFollowReply, error) {
	out := new(AddFollowReply)
	err := grpc.Invoke(ctx, "/profile.Profile/AddFollow", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profileClient) DeleteFollow(ctx context.Context, in *DeleteFollowRequest, opts ...grpc.CallOption) (*DeleteFollowReply, error) {
	out := new(DeleteFollowReply)
	err := grpc.Invoke(ctx, "/profile.Profile/DeleteFollow", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Profile service

type ProfileServer interface {
	GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoReply, error)
	GetFans(context.Context, *GetFansRequest) (*GetFansReply, error)
	GetFollow(context.Context, *GetFollowRequest) (*GetFollowReply, error)
	AddFollow(context.Context, *AddFollowRequest) (*AddFollowReply, error)
	DeleteFollow(context.Context, *DeleteFollowRequest) (*DeleteFollowReply, error)
}

func RegisterProfileServer(s *grpc.Server, srv ProfileServer) {
	s.RegisterService(&_Profile_serviceDesc, srv)
}

func _Profile_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.Profile/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).GetUserInfo(ctx, req.(*GetUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Profile_GetFans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFansRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).GetFans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.Profile/GetFans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).GetFans(ctx, req.(*GetFansRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Profile_GetFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).GetFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.Profile/GetFollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).GetFollow(ctx, req.(*GetFollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Profile_AddFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).AddFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.Profile/AddFollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).AddFollow(ctx, req.(*AddFollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Profile_DeleteFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfileServer).DeleteFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.Profile/DeleteFollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfileServer).DeleteFollow(ctx, req.(*DeleteFollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Profile_serviceDesc = grpc.ServiceDesc{
	ServiceName: "profile.Profile",
	HandlerType: (*ProfileServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _Profile_GetUserInfo_Handler,
		},
		{
			MethodName: "GetFans",
			Handler:    _Profile_GetFans_Handler,
		},
		{
			MethodName: "GetFollow",
			Handler:    _Profile_GetFollow_Handler,
		},
		{
			MethodName: "AddFollow",
			Handler:    _Profile_AddFollow_Handler,
		},
		{
			MethodName: "DeleteFollow",
			Handler:    _Profile_DeleteFollow_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("profile.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 449 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x54, 0xed, 0x6a, 0xd4, 0x40,
	0x14, 0x6d, 0x36, 0xc9, 0x8e, 0x7b, 0xbb, 0x96, 0xed, 0xf5, 0xa3, 0x31, 0xf6, 0x47, 0x18, 0x50,
	0x03, 0x85, 0xfe, 0xa8, 0x7f, 0x44, 0x41, 0x58, 0x28, 0x5d, 0x2a, 0x58, 0x6a, 0xa4, 0x0f, 0x10,
	0x9b, 0x09, 0x0c, 0xe6, 0xcb, 0x9d, 0x09, 0xda, 0x17, 0xf0, 0x3d, 0x7d, 0x13, 0x99, 0x99, 0x4d,
	0x48, 0x6c, 0x92, 0x82, 0x3f, 0xef, 0x9c, 0x7b, 0xee, 0x39, 0xb9, 0xf7, 0x10, 0x78, 0x5c, 0x6d,
	0xcb, 0x94, 0x67, 0xec, 0xb4, 0xda, 0x96, 0xb2, 0x44, 0xb2, 0x2b, 0xe9, 0x6f, 0x0b, 0x1e, 0xdd,
	0x08, 0xb6, 0xbd, 0x2c, 0xd2, 0x12, 0x11, 0x9c, 0xab, 0x38, 0x67, 0x9e, 0x15, 0x58, 0xe1, 0x22,
	0x72, 0x8a, 0x38, 0x67, 0xb8, 0x02, 0xfb, 0x9a, 0xdf, 0x7a, 0xb3, 0xc0, 0x0a, 0x97, 0x91, 0x5d,
	0xf1, 0x5b, 0xf4, 0x80, 0x5c, 0xc4, 0x85, 0xb8, 0xaa, 0x73, 0xcf, 0x0e, 0xac, 0xd0, 0x8d, 0x48,
	0x6a, 0x4a, 0x3c, 0x86, 0xc5, 0x45, 0x99, 0x65, 0xe5, 0x4f, 0x85, 0x39, 0x1a, 0x5b, 0xa4, 0xcd,
	0x83, 0x42, 0x3f, 0x33, 0x5e, 0xc5, 0x5c, 0xa1, 0xae, 0x41, 0xf3, 0xe6, 0x81, 0xbe, 0x06, 0xdc,
	0x30, 0xd9, 0x58, 0x89, 0xd8, 0x8f, 0x9a, 0x09, 0xa9, 0xd4, 0x6f, 0x78, 0xb2, 0x33, 0x64, 0xd7,
	0x3c, 0xa1, 0x5f, 0x60, 0xd5, 0xeb, 0xab, 0xb2, 0x3b, 0x7c, 0x0e, 0xf3, 0xaf, 0x32, 0x96, 0xb5,
	0xd0, 0x8d, 0x6e, 0x34, 0x17, 0xba, 0xc2, 0x57, 0xe0, 0xa8, 0x26, 0x6d, 0x7e, 0xff, 0xec, 0xf0,
	0xb4, 0xd9, 0x41, 0xcb, 0x76, 0x78, 0x91, 0x96, 0xf4, 0x1d, 0x1c, 0x6c, 0x98, 0x54, 0xdf, 0x34,
	0x2a, 0x8b, 0x4f, 0xc1, 0xbd, 0x2c, 0x12, 0xf6, 0x4b, 0xcf, 0xb2, 0x23, 0x97, 0xab, 0x82, 0x32,
	0x58, 0xb6, 0xcc, 0x29, 0x23, 0x83, 0x6c, 0x7c, 0x03, 0xae, 0xa2, 0x0a, 0xcf, 0x0e, 0xec, 0x61,
	0x7f, 0xae, 0xda, 0xac, 0xa0, 0x1f, 0x61, 0xb5, 0x4e, 0x12, 0xb3, 0xda, 0x71, 0x8b, 0x1e, 0x90,
	0x73, 0x26, 0xa4, 0x7a, 0x9d, 0xe9, 0x57, 0x92, 0x98, 0x92, 0x86, 0x70, 0xd0, 0xe1, 0x4f, 0x18,
	0xa5, 0x6b, 0x78, 0x72, 0xce, 0x32, 0x26, 0xd9, 0xff, 0x8b, 0x9d, 0xc0, 0x61, 0x7f, 0xc4, 0x94,
	0xde, 0x7b, 0x7d, 0xcd, 0x87, 0xc4, 0x86, 0x97, 0xff, 0xdd, 0x9c, 0xed, 0x61, 0x95, 0x91, 0xf5,
	0x9f, 0x00, 0x31, 0xe4, 0x89, 0x03, 0x10, 0x13, 0x5f, 0x71, 0xf6, 0x67, 0x06, 0xe4, 0xda, 0xa0,
	0xb8, 0x81, 0xfd, 0x4e, 0x04, 0xf1, 0x65, 0x4b, 0xbb, 0x1f, 0x60, 0xff, 0xc5, 0x30, 0x58, 0x65,
	0x77, 0x74, 0x0f, 0x3f, 0x00, 0xd9, 0xc5, 0x07, 0x8f, 0xba, 0x7d, 0x9d, 0x28, 0xfa, 0xcf, 0xee,
	0x03, 0x86, 0xbc, 0x86, 0x45, 0xfb, 0xf9, 0xd8, 0x93, 0xe9, 0xad, 0xd3, 0x3f, 0x1a, 0x82, 0xda,
	0x11, 0x6d, 0x2e, 0x3a, 0x23, 0xfe, 0xcd, 0x5a, 0x67, 0x44, 0x3f, 0x46, 0x74, 0x0f, 0x3f, 0xc1,
	0xb2, 0x7b, 0x6d, 0x3c, 0x6e, 0x5b, 0x07, 0x72, 0xe4, 0xfb, 0x23, 0xa8, 0x9e, 0xf5, 0x6d, 0xae,
	0xff, 0x4d, 0x6f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe8, 0xa9, 0x05, 0x96, 0xac, 0x04, 0x00,
	0x00,
}
