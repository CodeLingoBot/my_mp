// Code generated by protoc-gen-go.
// source: profile.proto
// DO NOT EDIT!

/*
Package profile is a generated protocol buffer package.

It is generated from these files:
	profile.proto

It has these top-level messages:
	UserInfo
	GetUserInfoRequest
	GetUserInfoReply
	GetFansRequest
	GetFansReply
	AddFollowRequest
	AddFollowReply
	DeleteFollowRequest
	DeleteFollowReply
	GetFollowRequest
	GetFollowReply
*/
package profile

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UserInfo struct {
	Uid       string `protobuf:"bytes,1,opt,name=Uid,json=uid" json:"Uid,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name,json=name" json:"Name,omitempty"`
	Pic       []byte `protobuf:"bytes,3,opt,name=Pic,json=pic,proto3" json:"Pic,omitempty"`
	FansNum   int32  `protobuf:"varint,4,opt,name=FansNum,json=fansNum" json:"FansNum,omitempty"`
	FollowNum int32  `protobuf:"varint,5,opt,name=FollowNum,json=followNum" json:"FollowNum,omitempty"`
	MeipaiNum int32  `protobuf:"varint,6,opt,name=MeipaiNum,json=meipaiNum" json:"MeipaiNum,omitempty"`
}

func (m *UserInfo) Reset()                    { *m = UserInfo{} }
func (m *UserInfo) String() string            { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()               {}
func (*UserInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetUserInfoRequest struct {
	Uid string `protobuf:"bytes,1,opt,name=Uid,json=uid" json:"Uid,omitempty"`
}

func (m *GetUserInfoRequest) Reset()                    { *m = GetUserInfoRequest{} }
func (m *GetUserInfoRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserInfoRequest) ProtoMessage()               {}
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetUserInfoReply struct {
	Status string    `protobuf:"bytes,1,opt,name=Status,json=status" json:"Status,omitempty"`
	Info   *UserInfo `protobuf:"bytes,2,opt,name=Info,json=info" json:"Info,omitempty"`
}

func (m *GetUserInfoReply) Reset()                    { *m = GetUserInfoReply{} }
func (m *GetUserInfoReply) String() string            { return proto.CompactTextString(m) }
func (*GetUserInfoReply) ProtoMessage()               {}
func (*GetUserInfoReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetUserInfoReply) GetInfo() *UserInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type GetFansRequest struct {
	Uid   string `protobuf:"bytes,1,opt,name=Uid,json=uid" json:"Uid,omitempty"`
	Index uint64 `protobuf:"varint,2,opt,name=Index,json=index" json:"Index,omitempty"`
}

func (m *GetFansRequest) Reset()                    { *m = GetFansRequest{} }
func (m *GetFansRequest) String() string            { return proto.CompactTextString(m) }
func (*GetFansRequest) ProtoMessage()               {}
func (*GetFansRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type GetFansReply struct {
	Status string      `protobuf:"bytes,1,opt,name=Status,json=status" json:"Status,omitempty"`
	Index  uint64      `protobuf:"varint,2,opt,name=Index,json=index" json:"Index,omitempty"`
	Fanss  []*UserInfo `protobuf:"bytes,3,rep,name=Fanss,json=fanss" json:"Fanss,omitempty"`
}

func (m *GetFansReply) Reset()                    { *m = GetFansReply{} }
func (m *GetFansReply) String() string            { return proto.CompactTextString(m) }
func (*GetFansReply) ProtoMessage()               {}
func (*GetFansReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetFansReply) GetFanss() []*UserInfo {
	if m != nil {
		return m.Fanss
	}
	return nil
}

type AddFollowRequest struct {
	Uid string `protobuf:"bytes,1,opt,name=Uid,json=uid" json:"Uid,omitempty"`
}

func (m *AddFollowRequest) Reset()                    { *m = AddFollowRequest{} }
func (m *AddFollowRequest) String() string            { return proto.CompactTextString(m) }
func (*AddFollowRequest) ProtoMessage()               {}
func (*AddFollowRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type AddFollowReply struct {
	Status string `protobuf:"bytes,1,opt,name=Status,json=status" json:"Status,omitempty"`
}

func (m *AddFollowReply) Reset()                    { *m = AddFollowReply{} }
func (m *AddFollowReply) String() string            { return proto.CompactTextString(m) }
func (*AddFollowReply) ProtoMessage()               {}
func (*AddFollowReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type DeleteFollowRequest struct {
	Uid string `protobuf:"bytes,1,opt,name=Uid,json=uid" json:"Uid,omitempty"`
}

func (m *DeleteFollowRequest) Reset()                    { *m = DeleteFollowRequest{} }
func (m *DeleteFollowRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteFollowRequest) ProtoMessage()               {}
func (*DeleteFollowRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type DeleteFollowReply struct {
	Status string `protobuf:"bytes,1,opt,name=Status,json=status" json:"Status,omitempty"`
}

func (m *DeleteFollowReply) Reset()                    { *m = DeleteFollowReply{} }
func (m *DeleteFollowReply) String() string            { return proto.CompactTextString(m) }
func (*DeleteFollowReply) ProtoMessage()               {}
func (*DeleteFollowReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type GetFollowRequest struct {
	Uid   string `protobuf:"bytes,1,opt,name=Uid,json=uid" json:"Uid,omitempty"`
	Index uint64 `protobuf:"varint,2,opt,name=Index,json=index" json:"Index,omitempty"`
}

func (m *GetFollowRequest) Reset()                    { *m = GetFollowRequest{} }
func (m *GetFollowRequest) String() string            { return proto.CompactTextString(m) }
func (*GetFollowRequest) ProtoMessage()               {}
func (*GetFollowRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type GetFollowReply struct {
	Status  string      `protobuf:"bytes,1,opt,name=Status,json=status" json:"Status,omitempty"`
	Index   uint64      `protobuf:"varint,2,opt,name=Index,json=index" json:"Index,omitempty"`
	Follows []*UserInfo `protobuf:"bytes,3,rep,name=Follows,json=follows" json:"Follows,omitempty"`
}

func (m *GetFollowReply) Reset()                    { *m = GetFollowReply{} }
func (m *GetFollowReply) String() string            { return proto.CompactTextString(m) }
func (*GetFollowReply) ProtoMessage()               {}
func (*GetFollowReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *GetFollowReply) GetFollows() []*UserInfo {
	if m != nil {
		return m.Follows
	}
	return nil
}

func init() {
	proto.RegisterType((*UserInfo)(nil), "profile.UserInfo")
	proto.RegisterType((*GetUserInfoRequest)(nil), "profile.GetUserInfoRequest")
	proto.RegisterType((*GetUserInfoReply)(nil), "profile.GetUserInfoReply")
	proto.RegisterType((*GetFansRequest)(nil), "profile.GetFansRequest")
	proto.RegisterType((*GetFansReply)(nil), "profile.GetFansReply")
	proto.RegisterType((*AddFollowRequest)(nil), "profile.AddFollowRequest")
	proto.RegisterType((*AddFollowReply)(nil), "profile.AddFollowReply")
	proto.RegisterType((*DeleteFollowRequest)(nil), "profile.DeleteFollowRequest")
	proto.RegisterType((*DeleteFollowReply)(nil), "profile.DeleteFollowReply")
	proto.RegisterType((*GetFollowRequest)(nil), "profile.GetFollowRequest")
	proto.RegisterType((*GetFollowReply)(nil), "profile.GetFollowReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for MPServer service

type MPServerClient interface {
	GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoReply, error)
	GetFans(ctx context.Context, in *GetFansRequest, opts ...grpc.CallOption) (*GetFansReply, error)
	GetFollow(ctx context.Context, in *GetFollowRequest, opts ...grpc.CallOption) (*GetFollowReply, error)
	AddFollow(ctx context.Context, in *AddFollowRequest, opts ...grpc.CallOption) (*AddFollowReply, error)
	DeleteFollow(ctx context.Context, in *DeleteFollowRequest, opts ...grpc.CallOption) (*DeleteFollowReply, error)
}

type mPServerClient struct {
	cc *grpc.ClientConn
}

func NewMPServerClient(cc *grpc.ClientConn) MPServerClient {
	return &mPServerClient{cc}
}

func (c *mPServerClient) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoReply, error) {
	out := new(GetUserInfoReply)
	err := grpc.Invoke(ctx, "/profile.MPServer/GetUserInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mPServerClient) GetFans(ctx context.Context, in *GetFansRequest, opts ...grpc.CallOption) (*GetFansReply, error) {
	out := new(GetFansReply)
	err := grpc.Invoke(ctx, "/profile.MPServer/GetFans", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mPServerClient) GetFollow(ctx context.Context, in *GetFollowRequest, opts ...grpc.CallOption) (*GetFollowReply, error) {
	out := new(GetFollowReply)
	err := grpc.Invoke(ctx, "/profile.MPServer/GetFollow", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mPServerClient) AddFollow(ctx context.Context, in *AddFollowRequest, opts ...grpc.CallOption) (*AddFollowReply, error) {
	out := new(AddFollowReply)
	err := grpc.Invoke(ctx, "/profile.MPServer/AddFollow", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mPServerClient) DeleteFollow(ctx context.Context, in *DeleteFollowRequest, opts ...grpc.CallOption) (*DeleteFollowReply, error) {
	out := new(DeleteFollowReply)
	err := grpc.Invoke(ctx, "/profile.MPServer/DeleteFollow", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MPServer service

type MPServerServer interface {
	GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoReply, error)
	GetFans(context.Context, *GetFansRequest) (*GetFansReply, error)
	GetFollow(context.Context, *GetFollowRequest) (*GetFollowReply, error)
	AddFollow(context.Context, *AddFollowRequest) (*AddFollowReply, error)
	DeleteFollow(context.Context, *DeleteFollowRequest) (*DeleteFollowReply, error)
}

func RegisterMPServerServer(s *grpc.Server, srv MPServerServer) {
	s.RegisterService(&_MPServer_serviceDesc, srv)
}

func _MPServer_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MPServerServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.MPServer/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MPServerServer).GetUserInfo(ctx, req.(*GetUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MPServer_GetFans_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFansRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MPServerServer).GetFans(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.MPServer/GetFans",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MPServerServer).GetFans(ctx, req.(*GetFansRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MPServer_GetFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MPServerServer).GetFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.MPServer/GetFollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MPServerServer).GetFollow(ctx, req.(*GetFollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MPServer_AddFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddFollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MPServerServer).AddFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.MPServer/AddFollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MPServerServer).AddFollow(ctx, req.(*AddFollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MPServer_DeleteFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteFollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MPServerServer).DeleteFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/profile.MPServer/DeleteFollow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MPServerServer).DeleteFollow(ctx, req.(*DeleteFollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MPServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "profile.MPServer",
	HandlerType: (*MPServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserInfo",
			Handler:    _MPServer_GetUserInfo_Handler,
		},
		{
			MethodName: "GetFans",
			Handler:    _MPServer_GetFans_Handler,
		},
		{
			MethodName: "GetFollow",
			Handler:    _MPServer_GetFollow_Handler,
		},
		{
			MethodName: "AddFollow",
			Handler:    _MPServer_AddFollow_Handler,
		},
		{
			MethodName: "DeleteFollow",
			Handler:    _MPServer_DeleteFollow_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("profile.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 442 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x54, 0x5d, 0x6f, 0x94, 0x40,
	0x14, 0x2d, 0x05, 0x96, 0xee, 0xed, 0xda, 0x6c, 0xaf, 0x1f, 0x45, 0xec, 0x03, 0x99, 0xa8, 0x25,
	0x69, 0xd2, 0x87, 0xfa, 0x62, 0xf4, 0xa9, 0x89, 0xe9, 0xa6, 0x26, 0x6d, 0x2a, 0x4d, 0x7f, 0x00,
	0x96, 0x4b, 0x32, 0x91, 0x2f, 0x19, 0x50, 0xfb, 0x4f, 0xfc, 0x7d, 0xfe, 0x12, 0x33, 0xc3, 0x42,
	0xa0, 0x0b, 0xec, 0xe3, 0x9d, 0x73, 0xee, 0x99, 0x3b, 0xe7, 0x9e, 0x0c, 0x3c, 0xcb, 0x8b, 0x2c,
	0xe2, 0x31, 0x9d, 0xe5, 0x45, 0x56, 0x66, 0x68, 0xad, 0x4b, 0xf6, 0x57, 0x83, 0xbd, 0x7b, 0x41,
	0xc5, 0x55, 0x1a, 0x65, 0xb8, 0x04, 0xfd, 0x9e, 0x87, 0xb6, 0xe6, 0x6a, 0xde, 0xdc, 0xd7, 0x2b,
	0x1e, 0x22, 0x82, 0x71, 0x13, 0x24, 0x64, 0xef, 0xaa, 0x23, 0x23, 0x0d, 0x12, 0x92, 0xac, 0x5b,
	0xfe, 0x60, 0xeb, 0xae, 0xe6, 0x2d, 0x7c, 0x3d, 0xe7, 0x0f, 0x68, 0x83, 0x75, 0x19, 0xa4, 0xe2,
	0xa6, 0x4a, 0x6c, 0xc3, 0xd5, 0x3c, 0xd3, 0xb7, 0xa2, 0xba, 0xc4, 0x63, 0x98, 0x5f, 0x66, 0x71,
	0x9c, 0xfd, 0x96, 0x98, 0xa9, 0xb0, 0x79, 0xd4, 0x1c, 0x48, 0xf4, 0x9a, 0x78, 0x1e, 0x70, 0x89,
	0xce, 0x6a, 0x34, 0x69, 0x0e, 0xd8, 0x7b, 0xc0, 0x15, 0x95, 0xcd, 0x70, 0x3e, 0xfd, 0xac, 0x48,
	0x94, 0x9b, 0x33, 0xb2, 0x6f, 0xb0, 0xec, 0xf1, 0xf2, 0xf8, 0x11, 0x5f, 0xc1, 0xec, 0xae, 0x0c,
	0xca, 0x4a, 0xac, 0x89, 0x33, 0xa1, 0x2a, 0x7c, 0x07, 0x86, 0x24, 0xa9, 0xf7, 0xec, 0x9f, 0x1f,
	0x9e, 0x35, 0xae, 0xb4, 0xdd, 0x06, 0x4f, 0xa3, 0x8c, 0x7d, 0x84, 0x83, 0x15, 0x95, 0xf2, 0x4d,
	0xa3, 0xd7, 0xe2, 0x0b, 0x30, 0xaf, 0xd2, 0x90, 0xfe, 0x28, 0x2d, 0xc3, 0x37, 0xb9, 0x2c, 0x18,
	0xc1, 0xa2, 0xed, 0x9c, 0x1a, 0x64, 0xb0, 0x1b, 0x4f, 0xc0, 0x94, 0xad, 0xc2, 0xd6, 0x5d, 0x7d,
	0x78, 0x3e, 0x53, 0x3a, 0x2b, 0xd8, 0x5b, 0x58, 0x5e, 0x84, 0x61, 0x6d, 0xed, 0xb8, 0x33, 0x1e,
	0x1c, 0x74, 0x58, 0x13, 0xe3, 0xb0, 0x13, 0x78, 0xfe, 0x85, 0x62, 0x2a, 0x69, 0x9b, 0xe4, 0x29,
	0x1c, 0xf6, 0x89, 0x53, 0xaa, 0x9f, 0xd4, 0x66, 0xb6, 0x48, 0x8e, 0x18, 0xf9, 0xa3, 0x5e, 0xc1,
	0xf6, 0x5b, 0x46, 0xac, 0x3c, 0x05, 0xab, 0x6e, 0x9e, 0x30, 0xd3, 0xaa, 0xa3, 0x28, 0xce, 0xff,
	0xed, 0xc2, 0xde, 0xf5, 0xed, 0x1d, 0x15, 0xbf, 0xa8, 0xc0, 0x15, 0xec, 0x77, 0xf2, 0x84, 0x6f,
	0xda, 0xbe, 0xcd, 0x34, 0x3a, 0xaf, 0x87, 0xc1, 0x3c, 0x7e, 0x64, 0x3b, 0xf8, 0x19, 0xac, 0x75,
	0x16, 0xf0, 0xa8, 0xcb, 0xeb, 0xe4, 0xca, 0x79, 0xb9, 0x09, 0xd4, 0xcd, 0x17, 0x30, 0x6f, 0xdf,
	0x8f, 0xbd, 0x6b, 0x7a, 0x7e, 0x3a, 0x47, 0x43, 0x50, 0x2b, 0xd1, 0xae, 0xbf, 0x23, 0xf1, 0x34,
	0x38, 0x1d, 0x89, 0x7e, 0x5a, 0xd8, 0x0e, 0x7e, 0x85, 0x45, 0x77, 0xdd, 0x78, 0xdc, 0x52, 0x07,
	0xe2, 0xe2, 0x38, 0x23, 0xa8, 0xd2, 0xfa, 0x3e, 0x53, 0x5f, 0xcf, 0x87, 0xff, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x97, 0x75, 0xe4, 0x4a, 0x8b, 0x04, 0x00, 0x00,
}
